package main

import (
	"fmt"
)

func main() {
	var total int
	var numbers []int
	for i := 1; FibonacciRecursion(i) < 4000000; i++ {
		if FibonacciRecursion(i)%2 == 0 {
			numbers = append(numbers, FibonacciRecursion(i))
		}
	}
	for _, n := range numbers {
		total += n
	}
	fmt.Println(total)
}

func FibonacciRecursion(n int) int {
	if n <= 1 {
		return n
	}
	return FibonacciRecursion(n-1) + FibonacciRecursion(n-2)
}

// Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
// => 4613732
